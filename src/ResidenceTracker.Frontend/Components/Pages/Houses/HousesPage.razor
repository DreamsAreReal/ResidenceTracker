@page "/houses"
@using ResidenceTracker.UseCases.Utilities
@inherits AbstractCrudBasePage<House>
<Table CancellationToken="CancellationToken"
       DisplayOrder="@DisplayOrder"
       IsLoading="IsLoading"
       MaxItemsPerPage="20"
       OnAddNewItem="HandleAddNewItem"
       OnChangeItem="HandleChangeItem"
       OnChangeLoadingState="HandleLoadingChange"
       @ref="            Table"
       Repository="Repository"
       Snackbar="Snackbar"
       TableTitle="Дома"
       TModel="House"/>
<div class="align-center d-flex flex-row">
    <MudButton Class="mt-5"
               Color="Color.Primary"
               Disabled="IsLoading"
               OnClick="@(ShowAddFlatForm)"
               Size="Size.Small"
               StartIcon="@Icons.Material.Filled.Add"
               Variant="Variant.Outlined">
        Добавить квартиру
    </MudButton>
    <MudButton Class="ml-5 mt-5"
               Color="Color.Secondary"
               Disabled="IsLoading"
               OnClick="@(ShowRemoveFlatForm)"
               Size="Size.Small"
               StartIcon="@Icons.Material.Filled.Remove"
               Variant="Variant.Outlined">
        Удалить квартиру
    </MudButton>
</div>
@if (!IsFormHidden)
{
    <MudPaper Class="mt-10 pa-4"
              disabled="@IsLoading">
        <MudForm Model="@ChangeableItem"
                 @ref="                Form"
                 Validation="@(Validator.ValidateValue)"
                 ValidationDelay="0">
            <MudCardContent>
                <MudTextField @bind-Value="                        ChangeableItem.Number"
                              For="@(() => ChangeableItem.Number)"
                              Immediate="true"
                              Label="@typeof(House).GetProperty(nameof(ChangeableItem.Number))!.GetLocalizedDisplayName()"/>
                <MudButton Class="mt-5"
                           Color="Color.Primary"
                           Disabled="IsLoading"
                           OnClick="@(async () => {await Submit();})"
                           StartIcon="@Icons.Material.Filled.Save"
                           Variant="Variant.Filled">
                    Применить
                </MudButton>
            </MudCardContent>
        </MudForm>
    </MudPaper>
}

@if (!_isFlatFormHidden)
{
    <MudPaper Class="mt-10 pa-4"
              disabled="@IsLoading">
        <MudForm Model="@_flat"
                 @ref="                _flatForm"
                 ValidationDelay="0">
            <MudCardContent>
                <MudAutocomplete AdornmentColor="Color.Primary"
                                 AdornmentIcon="@Icons.Material.Filled.Search"
                                 @bind-Value="                        _flat"
                                 For="@(() => _flat)"
                                 Immediate="true"
                                 Label="@typeof(House).GetProperty(nameof(ChangeableItem.Flats))!.GetLocalizedDisplayName()"
                                 Required="true"
                                 ResetValueOnEmptyText="true"
                                 SearchFunc="async x => await FlatRepository.SearchForAutocomplete(x, CancellationToken)"
                                 ToStringFunc="flat => flat?.Number.ToString()!"/>
                <MudButton Class="mt-5"
                           Color="Color.Primary"
                           Disabled="IsLoading"
                           OnClick="@(async () => {await SubmitFlatForm();})"
                           StartIcon="@Icons.Material.Filled.Save"
                           Variant="Variant.Filled">
                    Применить
                </MudButton>
            </MudCardContent>
        </MudForm>
    </MudPaper>
}
